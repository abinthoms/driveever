# Generated by Django 5.2.5 on 2025-08-26 14:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('user_management', '0003_academyprofile_academy_name_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('currency', models.CharField(default='GBP', max_length=3)),
                ('payment_method', models.CharField(choices=[('stripe', 'Stripe'), ('paypal', 'PayPal'), ('bank_transfer', 'Bank Transfer')], default='stripe', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('transaction_id', models.CharField(blank=True, help_text='External payment provider transaction ID', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_hours', models.DecimalField(decimal_places=1, default=1.0, help_text='Duration in hours (e.g., 1.5 for 1 hour 30 minutes)', max_digits=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('price_per_hour', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('lesson_type', models.CharField(blank=True, help_text="e.g., 'First Lesson', 'Test Preparation', 'Highway Practice'", max_length=50, null=True)),
                ('pickup_location', models.CharField(blank=True, max_length=255, null=True)),
                ('dropoff_location', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('instructor', models.ForeignKey(limit_choices_to={'user_type': 'instructor'}, on_delete=django.db.models.deletion.CASCADE, related_name='bookings_as_instructor', to=settings.AUTH_USER_MODEL)),
                ('learner', models.ForeignKey(limit_choices_to={'user_type': 'learner'}, on_delete=django.db.models.deletion.CASCADE, related_name='bookings_as_learner', to=settings.AUTH_USER_MODEL)),
                ('payment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booking', to='user_management.payment')),
            ],
            options={
                'db_table': 'booking',
                'ordering': ['lesson_date', 'start_time'],
                'indexes': [models.Index(fields=['learner', 'lesson_date'], name='booking_learner_ad5f79_idx'), models.Index(fields=['instructor', 'lesson_date'], name='booking_instruc_9faaea_idx'), models.Index(fields=['status', 'lesson_date'], name='booking_status_2676fb_idx')],
            },
        ),
    ]
